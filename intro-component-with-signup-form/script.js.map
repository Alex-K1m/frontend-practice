{"version":3,"sources":["src/fm-challenges/newbie/intro-component-with-signup-form/script.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","signupForm","document","querySelector","fields","querySelectorAll","map","field","input","feedback","checkEmpty","value","placeholder","trim","concat","inputChecks","firstName","lastName","email","test","password","validate","error","name","check","find","errorMsg","updateUi","textContent","classList","add","setAttribute","showFeedback","remove","removeAttribute","hideFeedback","hasErrors","Boolean","addEventListener","preventDefault","invalidFields","filter","console","log","focus"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,SAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,KAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,GACxe,aAEA,MAAMK,EAAaC,SAASC,cAAc,eACpCC,EAAS,IAAIH,EAAWI,iBAAiB,WAAWC,IAAIC,IAAS,CACrEA,MAAAA,EACAC,MAAOD,EAAMJ,cAAc,oBAC3BM,SAAUF,EAAMJ,cAAc,sBAG1BO,EAAa,EACjBC,MAAAA,EACAC,YAAAA,KACqB,KAAjBD,EAAME,OAAgB,GAAGC,OAAOF,EAAa,oBAAsB,GASnEG,EAAc,CAClBC,UAAW,CAACN,GACZO,SAAU,CAACP,GACXQ,MAAO,CAACR,EAVS,EACjBC,MAAAA,KAEoB,wCACDQ,KAAKR,EAAME,QAAU,GAAK,mCAO7CO,SAAU,CAACV,IA0BPW,EAAWd,IACf,MAAMC,MACJA,GACED,EACEe,EAAQP,EAAYP,EAAMe,MAAMjB,IAAIkB,GAASA,EAAMhB,IAAQiB,KAAKC,GAAyB,KAAbA,IAAoB,KACtG,MAAO,IAAKnB,EACVe,MAAAA,IAIEK,EAAWpB,IACXA,EAAMe,MAlCS,GACnBd,MAAAA,EACAD,MAAAA,EACAE,SAAAA,EACAa,MAAAA,MAGAb,EAASmB,YAAcN,EACvBf,EAAMsB,UAAUC,IAAI,eACpBtB,EAAMuB,aAAa,gBAAgB,IA0BjCC,CAAazB,GAvBI,GACnBC,MAAAA,EACAD,MAAAA,EACAE,SAAAA,MAGAA,EAASmB,YAAc,GACvBrB,EAAMsB,UAAUI,OAAO,eACvBzB,EAAM0B,gBAAgB,iBAiBpBC,CAAa5B,GAGRA,GAGH6B,EAAY,EAChBd,MAAAA,KACIe,QAAQf,GAYdrB,EAAWqC,iBAAiB,SAVbvD,IACbA,EAAEwD,iBACF,MAAMC,EAAgBpC,EAAOE,IAAIe,GAAUf,IAAIqB,GAAUc,OAAOL,GAEnC,IAAzBI,EAAc1C,OAEhB4C,QAAQC,IAAI,kCACPH,EAAc,GAAGhC,MAAMoC,WAK9B,KAAK,GAAG,CAAC","file":"script.js","sourcesContent":["const signupForm = document.querySelector('.signupForm');\nconst fields = [...signupForm.querySelectorAll('.field')].map(field => ({\n  field,\n  input: field.querySelector('.textInput_input'),\n  feedback: field.querySelector('.field_feedback'),\n}));\n\nconst checkEmpty = ({ value, placeholder }) =>\n  value.trim() === '' ? `${placeholder} cannot be empty` : '';\n\nconst checkEmail = ({ value }) => {\n  const emailRegExp = /^\\w+([.-]\\w+)*@\\w+([.-]\\w+)*\\.\\w{2,}$/;\n  return emailRegExp.test(value.trim())\n    ? ''\n    : 'Looks like this is not an email';\n};\n\nconst inputChecks = {\n  firstName: [checkEmpty],\n  lastName: [checkEmpty],\n  email: [checkEmpty, checkEmail],\n  password: [checkEmpty],\n};\n\nconst showFeedback = ({ input, field, feedback, error }) => {\n  // eslint-disable-next-line no-param-reassign\n  feedback.textContent = error;\n  field.classList.add('field-error');\n  input.setAttribute('aria-invalid', true);\n};\n\nconst hideFeedback = ({ input, field, feedback }) => {\n  // eslint-disable-next-line no-param-reassign\n  feedback.textContent = '';\n  field.classList.remove('field-error');\n  input.removeAttribute('aria-invalid');\n};\n\nconst validate = field => {\n  const { input } = field;\n  const error =\n    inputChecks[input.name]\n      .map(check => check(input))\n      .find(errorMsg => errorMsg !== '') || null;\n  return { ...field, error };\n};\n\nconst updateUi = field => {\n  if (field.error) {\n    showFeedback(field);\n  } else {\n    hideFeedback(field);\n  }\n  return field;\n};\n\nconst hasErrors = ({ error }) => Boolean(error);\n\nconst signup = e => {\n  e.preventDefault();\n\n  const invalidFields = fields.map(validate).map(updateUi).filter(hasErrors);\n\n  if (invalidFields.length === 0) {\n    // eslint-disable-next-line no-console\n    console.log('Signup form validation passed.');\n    // send data to backend, handle response\n  } else invalidFields[0].input.focus();\n};\n\nsignupForm.addEventListener('submit', signup);\n"]}