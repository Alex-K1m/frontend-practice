{"version":3,"sources":["src/fm-challenges/newbie/intro-component-with-signup-form/script.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","signupForm","document","querySelector","fields","querySelectorAll","map","field","input","feedback","checkEmpty","placeholder","trim","concat","inputChecks","firstName","lastName","email","test","password","validate","error","name","check","find","errorMsg","updateUi","textContent","classList","add","setAttribute","showFeedback","remove","removeAttribute","hideFeedback","hasErrors","Boolean","addEventListener","preventDefault","invalidFields","console","log","focus"],"mappings":"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","file":"script.js","sourcesContent":["const signupForm = document.querySelector('.signupForm');\nconst fields = [...signupForm.querySelectorAll('.field')].map(field => ({\n  field,\n  input: field.querySelector('.textInput_input'),\n  feedback: field.querySelector('.field_feedback'),\n}));\n\nconst checkEmpty = ({ value, placeholder }) =>\n  value.trim() === '' ? `${placeholder} cannot be empty` : '';\n\nconst checkEmail = ({ value }) => {\n  const emailRegExp = /^\\w+([.-]\\w+)*@\\w+([.-]\\w+)*\\.\\w{2,}$/;\n  return emailRegExp.test(value.trim())\n    ? ''\n    : 'Looks like this is not an email';\n};\n\nconst inputChecks = {\n  firstName: [checkEmpty],\n  lastName: [checkEmpty],\n  email: [checkEmpty, checkEmail],\n  password: [checkEmpty],\n};\n\nconst showFeedback = ({ input, field, feedback, error }) => {\n  // eslint-disable-next-line no-param-reassign\n  feedback.textContent = error;\n  field.classList.add('field-error');\n  input.setAttribute('aria-invalid', true);\n};\n\nconst hideFeedback = ({ input, field, feedback }) => {\n  // eslint-disable-next-line no-param-reassign\n  feedback.textContent = '';\n  field.classList.remove('field-error');\n  input.removeAttribute('aria-invalid');\n};\n\nconst validate = field => {\n  const { input } = field;\n  const error =\n    inputChecks[input.name]\n      .map(check => check(input))\n      .find(errorMsg => errorMsg !== '') || null;\n  return { ...field, error };\n};\n\nconst updateUi = field => {\n  if (field.error) {\n    showFeedback(field);\n  } else {\n    hideFeedback(field);\n  }\n  return field;\n};\n\nconst hasErrors = ({ error }) => Boolean(error);\n\nconst signup = e => {\n  e.preventDefault();\n\n  const invalidFields = fields.map(validate).map(updateUi).filter(hasErrors);\n\n  if (invalidFields.length === 0) {\n    // eslint-disable-next-line no-console\n    console.log('Signup form validation passed.');\n    // send data to backend, handle response\n  } else invalidFields[0].input.focus();\n};\n\nsignupForm.addEventListener('submit', signup);\n"]}