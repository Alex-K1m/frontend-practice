{"version":3,"sources":["src/fm-challenges/newbie/ping-coming-soon-page/script.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","subscribeForm","document","querySelector","emailInput","feedbackEl","feedbackText","empty","invalid","valid","addEventListener","preventDefault","formData","FormData","status","email","get","trim","test","validate","textContent","removeAttribute","classList","remove","add","setAttribute","focus"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,SAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,KAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,GACxe,aAEA,MAAMK,EAAgBC,SAASC,cAAc,kBACvCC,EAAaF,SAASC,cAAc,qBACpCE,EAAaH,SAASC,cAAc,2BACpCG,EAAe,CACnBC,MAAO,qDACPC,QAAS,uCACTC,MAAO,6BA+BTR,EAAcS,iBAAiB,SANb3B,IAChBA,EAAE4B,iBACF,MAAMC,EAAW,IAAIC,SAASZ,GAjBXa,IAAAA,EAAAA,EAPJF,CAAAA,IACf,MACMG,EAAQH,EAASI,IAAI,SAASC,OACpC,MAAc,KAAVF,EAAqB,QAFL,wCAGDG,KAAKH,GAAS,QAAU,WAqB9BI,CAASP,GAjBtBP,EAAWe,YAAcd,EAAaQ,GAEvB,UAAXA,GACFV,EAAWiB,gBAAgB,gBAC3BpB,EAAcqB,UAAUC,OAAO,uBAC/BtB,EAAcqB,UAAUE,IAAI,2BAE5BpB,EAAWqB,aAAa,gBAAgB,GACxCxB,EAAcqB,UAAUC,OAAO,yBAC/BtB,EAAcqB,UAAUE,IAAI,uBAC5BpB,EAAWsB,YAYb,KAAK,GAAG,CAAC","file":"script.js","sourcesContent":["const subscribeForm = document.querySelector('.subscribeForm');\nconst emailInput = document.querySelector('.emailField_input');\nconst feedbackEl = document.querySelector('.subscribeForm_feedback');\nconst feedbackText = {\n  empty: 'Whoops! It looks like you forgot to add your email',\n  invalid: 'Please provide a valid email address',\n  valid: 'You have been subscribed!',\n};\n\nconst validate = formData => {\n  const emailRegExp = /^\\w+([.-]\\w+)*@\\w+([.-]\\w+)*\\.\\w{2,}$/;\n  const email = formData.get('email').trim();\n\n  if (email === '') return 'empty';\n  return emailRegExp.test(email) ? 'valid' : 'invalid';\n};\n\nconst showFeedback = status => {\n  feedbackEl.textContent = feedbackText[status];\n  if (status === 'valid') {\n    emailInput.removeAttribute('aria-invalid');\n    subscribeForm.classList.remove('subscribeForm-error');\n    subscribeForm.classList.add('subscribeForm-success');\n  } else {\n    emailInput.setAttribute('aria-invalid', true);\n    subscribeForm.classList.remove('subscribeForm-success');\n    subscribeForm.classList.add('subscribeForm-error');\n    emailInput.focus();\n  }\n};\n\nconst subscribe = e => {\n  e.preventDefault();\n  const formData = new FormData(subscribeForm);\n  showFeedback(validate(formData));\n};\n\nsubscribeForm.addEventListener('submit', subscribe);\n"]}