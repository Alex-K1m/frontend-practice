extends includes/seo

block content
  -
    const format = num =>
      num >= 10000 ? `${Math.floor(num / 1000)}k` : String(num);

    const summaryData = [
      ['facebook',  '@nathanf',      1987,   12],
      ['twitter',   '@nathanf',      1044,   99],
      ['instagram', '@realnathanf', 11111, 1099],
      ['youtube',   'Nathan F.',     8239, -144],
    ];

    const overviewData = [
      ['Page views',    'facebook',     87,    3],
      ['Likes',         'facebook',     52,   -2],
      ['Likes',         'instagram',  5462, 2257],
      ['Profile views', 'instagram', 52100, 1375],
      ['Retweets',      'twitter',     117,  303],
      ['Likes',         'twitter',     507,  553],
      ['Likes',         'youtube',     107,  -19],
      ['Total views',   'youtube',    1407,  -12],
    ];

  .wrapper
    .container
      header.header
        .heading
          h1.h1 Social media dashboard
          p.text Total followers: 23,004
        hr.separator
        label.label.text
          | Dark mode
          input.sr-only(type='checkbox')
          span.switch
      main
        section.summary
          h2.sr-only Summary
          ul.grid
            each record in summaryData
              - const [platform, account, total, today] = record;
              li.cell.card(data-platform=`${platform}`)
                h3.sr-only #{platform}
                p.account #{account}
                strong.text-big #{format(total)}
                p.text-secondary #{platform === 'youtube' ? 'Subscribers' : 'Followers'}
                p.change(data-change=`${today < 0 ? "down" : "up"}`)
                  | #{Math.abs(today)} Today
        section.overview
          h2.h2 Overview - today
          ul.grid
            each record in overviewData
              - const [heading, platform, stat, change] = record;
              li.cell
                .group
                  h3.text
                    | #{heading}
                    span.sr-only for #{platform}
                  .icon(data-platform=`${platform}`)
                .group
                  p.stat #{format(stat)}
                  p.change(data-change=`${change < 0 ? "down" : "up"}`)
                    | #{Math.abs(change)}%
