{"version":3,"sources":["_utils.js","_modal.js","script.js"],"names":["$","document","querySelector","bind","$$","querySelectorAll","animate","$el","animation","Promise","resolve","removeAnimation","classList","remove","removeEventListener","add","addEventListener","delay","duration","setTimeout","toggleDisplay","toggle","genRandomNum","min","max","Math","floor","random","getSavedItem","key","localStorage","getItem","err","DOMException","message","includes","saveItem","value","setItem","require","$overlay","$rulesBtn","$closeModalBtn","hideModal","event","stopPropagation","target","contains","then","showModal","$playField","$result","$leftCol","$rightCol","$status","$score","$center","savedScore","console","warn","score","Number","isGameInProgress","textContent","newOptionElement","className","$option","createElement","$spanWithIcon","cloneNode","append","options","name","beats","map","opt","$element","toLowerCase","render","playerPick","housePick","isPlayerWon","play","currentTarget","clickedOptName","getAttribute","findIndex","length","_","i","filter","newRound","removeChild","lastElementChild","forEach"],"mappings":"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","file":"script.762dba41.js","sourceRoot":"../src","sourcesContent":["export const $ = document.querySelector.bind(document);\n\nexport const $$ = document.querySelectorAll.bind(document);\n\nexport const animate = ($el, animation) =>\n  new Promise((resolve) => {\n    const removeAnimation = () => {\n      $el.classList.remove(animation);\n      $el.removeEventListener('animationend', removeAnimation);\n      resolve($el);\n    };\n\n    $el.classList.add(animation);\n    $el.addEventListener('animationend', removeAnimation);\n  });\n\nexport const delay = (duration = 0) =>\n  new Promise((resolve) => {\n    setTimeout(resolve, duration);\n  });\n\nexport const toggleDisplay = ($el) => {\n  $el.classList.toggle('hidden');\n};\n\nexport const genRandomNum = (min = 0, max = 1) =>\n  Math.floor(min + Math.random() * (max - min));\n\nexport const getSavedItem = (key) => {\n  try {\n    return localStorage.getItem(key);\n  } catch (err) {\n    if (err instanceof DOMException && err.message.includes('localStorage'))\n      return null;\n    throw err;\n  }\n};\n\nexport const saveItem = (key, value) => {\n  try {\n    localStorage.setItem(key, value);\n    return true;\n  } catch (err) {\n    if (err instanceof DOMException && err.message.includes('localStorage'))\n      return false;\n    throw err;\n  }\n};\n","const { $, animate, toggleDisplay } = require('./_utils');\n\nconst $overlay = $('.overlay');\nconst $rulesBtn = $('.rules');\nconst $closeModalBtn = $('.modal > button');\n\nconst hideModal = (event) => {\n  event.stopPropagation();\n  const { target } = event;\n\n  if (target === $overlay || $closeModalBtn.contains(target)) {\n    animate($overlay, 'fadeOut').then(toggleDisplay);\n  }\n};\n\nconst showModal = () => {\n  toggleDisplay($overlay);\n  animate($overlay, 'fadeIn');\n};\n\n$closeModalBtn.addEventListener('click', hideModal, true);\n$overlay.addEventListener('click', hideModal, true);\n$rulesBtn.addEventListener('click', showModal);\n","import './_modal';\nimport {\n  $,\n  $$,\n  animate,\n  delay,\n  toggleDisplay,\n  genRandomNum,\n  getSavedItem,\n  saveItem,\n} from './_utils';\n\nconst $playField = $('.playField');\nconst $result = $('.result');\nconst $leftCol = $('.result > .col:nth-child(1) > .box');\nconst $rightCol = $('.result > .col:nth-child(2) > .box');\nconst $status = $('.status');\nconst $score = $('.score > div:nth-child(2)');\nconst $center = $('.center');\n\nconst savedScore = getSavedItem('score');\nif (savedScore === null)\n  // eslint-disable-next-line no-console\n  console.warn(\n    \"The score won't be saved between sessions as third party cookies are disabled in your browser.\",\n  );\n\nlet score = Number(savedScore) || 0;\nlet isGameInProgress = false;\n\n$score.textContent = score;\n\nconst newOptionElement = (className) => {\n  const $option = document.createElement('div');\n  $option.classList.add('option', className);\n\n  const $spanWithIcon = $(`button.option.${className} > span`).cloneNode(true);\n  $option.append($spanWithIcon);\n\n  return $option;\n};\n\n// 'beats' contains indexes of the options\nconst options = [\n  { name: 'Scissors', beats: [1, 3] },\n  { name: 'Paper', beats: [2, 4] },\n  { name: 'Rock', beats: [3, 0] },\n  { name: 'Lizard', beats: [4, 1] },\n  { name: 'Spock', beats: [0, 2] },\n].map((opt) => ({\n  ...opt,\n  $element: newOptionElement(opt.name.toLowerCase()),\n}));\n\nconst render = async (playerPick, housePick, isPlayerWon) => {\n  $leftCol.append(options[playerPick].$element);\n  await animate($playField, 'fadeOut');\n  toggleDisplay($playField);\n  await delay(300);\n\n  toggleDisplay($result);\n  await animate($result, 'fadeIn');\n  await delay(800);\n\n  $rightCol.append(options[housePick].$element);\n  await animate(options[housePick].$element, 'flip');\n  await delay(500);\n\n  (isPlayerWon ? $leftCol : $rightCol).classList.add('highlight');\n  await delay(1000);\n\n  $status.textContent = isPlayerWon ? 'You win' : 'You lose';\n  $result.classList.add('expanded');\n  await animate($center, 'expand');\n\n  animate($score, 'flip-scale');\n  await delay(300);\n  $score.textContent = score;\n};\n\nconst play = ({ currentTarget }) => {\n  if (isGameInProgress) return;\n  isGameInProgress = true;\n\n  const clickedOptName = currentTarget.getAttribute('aria-label');\n  const playerPick = options.findIndex(({ name }) => name === clickedOptName);\n\n  const random = genRandomNum(0, options.length - 1);\n  const housePick = options\n    .map((_, i) => i) // saving initial indexes\n    // filtering out the option already picked by a player\n    // & picking a random option from the rest\n    .filter((_, i) => i !== playerPick)[random];\n\n  const isPlayerWon = options[playerPick].beats.includes(housePick);\n\n  score += isPlayerWon ? 1 : -1;\n  saveItem('score', score);\n\n  render(playerPick, housePick, isPlayerWon);\n};\n\nconst newRound = async () => {\n  if (!isGameInProgress) return;\n  isGameInProgress = false;\n\n  await animate($result, 'fadeOut');\n  toggleDisplay($result);\n\n  toggleDisplay($playField);\n  animate($playField, 'fadeIn');\n\n  $('.highlight').classList.remove('highlight');\n\n  $result.classList.remove('expanded');\n\n  $leftCol.removeChild($leftCol.lastElementChild);\n  $rightCol.removeChild($rightCol.lastElementChild);\n\n  isGameInProgress = false;\n};\n\n$$('.playField .option').forEach(($option) => {\n  $option.addEventListener('click', play);\n});\n\n$('.repeat').addEventListener('click', newRound);\n"]}