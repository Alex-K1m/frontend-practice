{"version":3,"sources":["script.js"],"names":["$testimonials","document","querySelector","$photo","$quote","$cite","$author","$position","elementsToAnimate","factor","prev","next","animations","hide","show","currentSlide","getData","data","fetch","url","json","err","console","log","createImage","alt","$img","Image","src","animate","elements","animationClass","Promise","resolve","removeAnimation","forEach","element","classList","remove","removeEventListener","add","addEventListener","updateContent","testimonial","firstElementChild","replaceWith","textContent","quote","author","position","changeSlide","testimonials","target","btn","setAttribute","direction","dataset","slide","Math","abs","length","then","removeAttribute","map","photoUrl","querySelectorAll"],"mappings":"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","file":"script.edf36b88.js","sourceRoot":"../src","sourcesContent":["const $testimonials = document.querySelector('.testimonials');\nconst $photo = $testimonials.querySelector('.photo');\nconst $quote = $testimonials.querySelector('.quote > p');\nconst $cite = $testimonials.querySelector('.quote > footer');\nconst $author = $testimonials.querySelector('.quote > footer > cite');\nconst $position = $testimonials.querySelector(\n  '.quote > footer > cite:nth-child(2)',\n);\n\nconst elementsToAnimate = [$photo, $quote, $cite];\nconst factor = { prev: -1, next: 1 };\nconst animations = {\n  hide: {\n    prev: 'hide-reverse',\n    next: 'hide',\n  },\n  show: {\n    prev: 'show-reverse',\n    next: 'show',\n  },\n};\n\nlet currentSlide = 0;\n\nconst getData = async (url) => {\n  try {\n    const data = await fetch(url);\n    return await data.json();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log('An error occur while getting data:\\n', err);\n    return null;\n  }\n};\n\nconst createImage = (url, alt) => {\n  const $img = new Image();\n  $img.src = url;\n  $img.alt = alt;\n  return $img;\n};\n\nconst animate = (elements, animationClass) =>\n  new Promise((resolve) => {\n    const removeAnimation = () => {\n      elements.forEach((element) => {\n        element.classList.remove(animationClass);\n      });\n      elements[0].removeEventListener('animationend', removeAnimation);\n      resolve();\n    };\n\n    elements.forEach((element) => {\n      element.classList.add(animationClass);\n    });\n    elements[0].addEventListener('animationend', removeAnimation);\n  });\n\nconst updateContent = (testimonial) => {\n  $photo.firstElementChild.replaceWith(testimonial.$photo);\n  $quote.textContent = testimonial.quote;\n  $author.textContent = testimonial.author;\n  $position.textContent = testimonial.position;\n};\n\nconst changeSlide = (testimonials) => ({ target: btn }) => {\n  btn.setAttribute('disabled', true);\n  const direction = btn.dataset.slide;\n\n  currentSlide =\n    Math.abs(currentSlide + factor[direction]) % testimonials.length;\n\n  animate(elementsToAnimate, animations.hide[direction])\n    .then(() => updateContent(testimonials[currentSlide]))\n    .then(() => animate(elementsToAnimate, animations.show[direction]))\n    .then(() => btn.removeAttribute('disabled'));\n};\n\n(async () => {\n  const data = await getData('data.json');\n  if (!data) return;\n\n  const testimonials = data.testimonials.map((testimonial) => ({\n    ...testimonial,\n    $photo: createImage(\n      testimonial.photoUrl,\n      `Member photo - ${testimonial.author}`,\n    ),\n  }));\n\n  document\n    .querySelectorAll('[data-slide]')\n    .forEach((btn) => btn.addEventListener('click', changeSlide(testimonials)));\n})();\n"]}